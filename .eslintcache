[{"/Users/nicolas/Projects/musicdb_frontend/src/App.js":"1","/Users/nicolas/Projects/musicdb_frontend/src/index.js":"2","/Users/nicolas/Projects/musicdb_frontend/src/reportWebVitals.js":"3","/Users/nicolas/Projects/musicdb_frontend/src/components/Layout/Sidebar/Sidebar.js":"4","/Users/nicolas/Projects/musicdb_frontend/src/components/Layout/Navbar/Navbar.js":"5","/Users/nicolas/Projects/musicdb_frontend/src/store.js":"6","/Users/nicolas/Projects/musicdb_frontend/src/reducers/index.js":"7","/Users/nicolas/Projects/musicdb_frontend/src/reducers/artists.js":"8","/Users/nicolas/Projects/musicdb_frontend/src/actions/types.js":"9","/Users/nicolas/Projects/musicdb_frontend/src/actions/artists.js":"10","/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Register/Register.js":"11","/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Login/Login.js":"12","/Users/nicolas/Projects/musicdb_frontend/src/reducers/auth.js":"13","/Users/nicolas/Projects/musicdb_frontend/src/components/Common/PrivateRoute.js":"14","/Users/nicolas/Projects/musicdb_frontend/src/actions/auth.js":"15","/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Dashboard/Dashboard.js":"16","/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Artists/Artists.js":"17","/Users/nicolas/Projects/musicdb_frontend/src/components/Common/Sitetray/Sidetray.js":"18","/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Artists/NewArtistForm/NewArtistForm.js":"19","/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Playlists/Playlists.js":"20","/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Artist/Artist.js":"21","/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Songs/Songs.js":"22","/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Songs/NewSongForm/NewSongForm.js":"23","/Users/nicolas/Projects/musicdb_frontend/src/reducers/songs.js":"24","/Users/nicolas/Projects/musicdb_frontend/src/actions/songs.js":"25","/Users/nicolas/Projects/musicdb_frontend/src/components/Common/Rating/Rating.js":"26","/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Song/Song.js":"27","/Users/nicolas/Projects/musicdb_frontend/src/components/Common/YoutubeWidget.js":"28","/Users/nicolas/Projects/musicdb_frontend/src/components/Common/PDFEmbed.js":"29","/Users/nicolas/Projects/musicdb_frontend/src/components/Common/SpotifyWidget.js":"30","/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Songs/EditSongForm/EditSongForm.js":"31","/Users/nicolas/Projects/musicdb_frontend/src/components/Common/Loading/Loading.js":"32","/Users/nicolas/Projects/musicdb_frontend/src/reducers/content.js":"33","/Users/nicolas/Projects/musicdb_frontend/src/components/Common/RangeSlider/RangeSlider.js":"34"},{"size":1670,"mtime":1607838087980,"results":"35","hashOfConfig":"36"},{"size":500,"mtime":1607396535485,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1607298661599,"results":"38","hashOfConfig":"36"},{"size":5185,"mtime":1607838258801,"results":"39","hashOfConfig":"36"},{"size":2046,"mtime":1607577531057,"results":"40","hashOfConfig":"36"},{"size":380,"mtime":1607303247082,"results":"41","hashOfConfig":"36"},{"size":196,"mtime":1607637594256,"results":"42","hashOfConfig":"36"},{"size":1121,"mtime":1607913806425,"results":"43","hashOfConfig":"36"},{"size":965,"mtime":1607892935912,"results":"44","hashOfConfig":"36"},{"size":2266,"mtime":1607914132532,"results":"45","hashOfConfig":"36"},{"size":2957,"mtime":1607392056037,"results":"46","hashOfConfig":"36"},{"size":2027,"mtime":1607390000482,"results":"47","hashOfConfig":"36"},{"size":1343,"mtime":1607885663549,"results":"48","hashOfConfig":"36"},{"size":1276,"mtime":1607895369581,"results":"49","hashOfConfig":"36"},{"size":2717,"mtime":1607885901960,"results":"50","hashOfConfig":"36"},{"size":7317,"mtime":1607920802828,"results":"51","hashOfConfig":"36"},{"size":4266,"mtime":1607899015680,"results":"52","hashOfConfig":"36"},{"size":1150,"mtime":1607833167153,"results":"53","hashOfConfig":"36"},{"size":4159,"mtime":1607637423590,"results":"54","hashOfConfig":"36"},{"size":260,"mtime":1607489826413,"results":"55","hashOfConfig":"36"},{"size":6716,"mtime":1607914053744,"results":"56","hashOfConfig":"36"},{"size":4971,"mtime":1607893142092,"results":"57","hashOfConfig":"36"},{"size":3883,"mtime":1607922506505,"results":"58","hashOfConfig":"36"},{"size":787,"mtime":1607892963139,"results":"59","hashOfConfig":"36"},{"size":1751,"mtime":1607914153010,"results":"60","hashOfConfig":"36"},{"size":2031,"mtime":1607815360365,"results":"61","hashOfConfig":"36"},{"size":5582,"mtime":1607879926437,"results":"62","hashOfConfig":"36"},{"size":449,"mtime":1607733990359,"results":"63","hashOfConfig":"36"},{"size":441,"mtime":1607665045654,"results":"64","hashOfConfig":"36"},{"size":392,"mtime":1607742814749,"results":"65","hashOfConfig":"36"},{"size":4486,"mtime":1608086608622,"results":"66","hashOfConfig":"36"},{"size":277,"mtime":1607829817913,"results":"67","hashOfConfig":"36"},{"size":441,"mtime":1607830379276,"results":"68","hashOfConfig":"36"},{"size":676,"mtime":1607886732566,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"aypft9",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"101"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"101"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"/Users/nicolas/Projects/musicdb_frontend/src/App.js",[],"/Users/nicolas/Projects/musicdb_frontend/src/index.js",[],["152","153"],"/Users/nicolas/Projects/musicdb_frontend/src/reportWebVitals.js",[],["154","155"],"/Users/nicolas/Projects/musicdb_frontend/src/components/Layout/Sidebar/Sidebar.js",[],"/Users/nicolas/Projects/musicdb_frontend/src/components/Layout/Navbar/Navbar.js",["156"],"import React, { Component } from \"react\";\nimport { logout } from \"../../../actions/auth\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport styles from \"./Navbar.module.scss\";\n\nclass Navbar extends Component {\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    logout: PropTypes.func.isRequired,\n  };\n\n  state = {\n    profileToggle: false,\n  };\n\n  onLogoutClick = (e) => {\n    e.preventDefault();\n    this.props.logout();\n  };\n\n  toggleProfile = () => {\n    this.setState({ profileToggle: !this.state.profileToggle });\n  };\n\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n\n    return (\n      <div className={styles.navbar}>\n        <div className={styles.controls}>\n          <BackButton />\n          <ForwardButton />\n        </div>\n        <input type=\"text\" placeholder=\"Search...\"></input>\n        <div className={styles.navbar__dropdown}>\n          <div\n            className={`${styles.link} ${\n              this.state.profileToggle ? styles.active : \"\"\n            }`}\n            onClick={this.toggleProfile}\n          >\n            {user.username} <i className=\"fas fa-chevron-down\"></i>\n          </div>\n          <div\n            className={`${styles.dropdown} ${\n              this.state.profileToggle ? styles.active : \"\"\n            }`}\n          >\n            <ul>\n              <li onClick={this.onLogoutClick}>Logout</li>\n              <li onClick={this.onLogoutClick}>Account</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const BackButton = () => {\n  let history = useHistory();\n  return (\n    <i className=\"fas fa-chevron-left\" onClick={() => history.goBack()}></i>\n  );\n};\n\nexport const ForwardButton = () => {\n  let history = useHistory();\n  return (\n    <i className=\"fas fa-chevron-right\" onClick={() => history.goForward()}></i>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n",["157","158"],"/Users/nicolas/Projects/musicdb_frontend/src/store.js",[],"/Users/nicolas/Projects/musicdb_frontend/src/reducers/index.js",[],["159","160"],"/Users/nicolas/Projects/musicdb_frontend/src/reducers/artists.js",["161"],"import {\n  GET_ARTISTS,\n  DELETE_ARTIST,\n  ADD_ARTIST,\n  GET_ARTIST,\n  ADD_SONG,\n  CLEAR_ARTISTS,\n} from \"../actions/types.js\";\n\nconst initialState = {\n  artists: [],\n  songs: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ARTISTS:\n      return {\n        ...state,\n        artists: action.payload,\n      };\n    case DELETE_ARTIST:\n      return {\n        ...state,\n        artists: state.artists.filter((artist) => artist.id !== action.payload),\n        songs: state.songs.filter((song) => song.arist_id !== action.payload),\n      };\n    case ADD_ARTIST:\n      return {\n        ...state,\n        artists: [...state.artists, action.payload],\n      };\n    case GET_ARTIST:\n      return {\n        ...state,\n        artist: action.payload,\n      };\n    case CLEAR_ARTISTS:\n      return {\n        ...state,\n        artists: [],\n        artist: {},\n      };\n    case ADD_SONG:\n      return {\n        ...state,\n        artist: {\n          ...state.artist,\n          songs: [...state.artist.songs, action.payload],\n        },\n      };\n    default:\n      return state;\n  }\n}\n","/Users/nicolas/Projects/musicdb_frontend/src/actions/types.js",[],"/Users/nicolas/Projects/musicdb_frontend/src/actions/artists.js",[],"/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Register/Register.js",[],["162","163"],"/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Login/Login.js",[],["164","165"],"/Users/nicolas/Projects/musicdb_frontend/src/reducers/auth.js",["166","167"],"import {\n  USER_LOADED,\n  USER_LOADING,\n  USER_AUTHENTICATED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isLoading: false,\n        user: action.payload,\n      };\n    case USER_AUTHENTICATED:\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    // return {\n    //   ...state,\n    //   artists: [],\n    //   songs: [],\n    // };\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/nicolas/Projects/musicdb_frontend/src/components/Common/PrivateRoute.js",[],"/Users/nicolas/Projects/musicdb_frontend/src/actions/auth.js",[],"/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Dashboard/Dashboard.js",["168"],"/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Artists/Artists.js",["169"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getArtists, deleteArtist, addArtist } from \"../../../actions/artists\";\n\nimport styles from \"./Artists.module.scss\";\nimport { Link } from \"react-router-dom\";\n\nimport Sidetray from \"../../Common/Sitetray/Sidetray\";\nimport NewArtistForm from \"./NewArtistForm/NewArtistForm\";\nimport RangeSlider from \"../../Common/RangeSlider/RangeSlider\";\n\nclass Artists extends Component {\n  static propTypes = {\n    artists: PropTypes.array.isRequired,\n    getArtists: PropTypes.func.isRequired,\n    deleteArtist: PropTypes.func.isRequired,\n    addArtist: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.props.getArtists();\n  }\n\n  state = {\n    order: \"name\",\n    filter: \"\",\n    sidetray: false,\n    gridSize: 200,\n  };\n\n  artistsList = () => {\n    return this.props.artists\n      .sort((a, b) => {\n        if (a[this.state.order] < b[this.state.order]) {\n          return -1;\n        }\n        if (a[this.state.order] > b[this.state.order]) {\n          return 1;\n        }\n\n        return 0;\n      })\n      .filter((artist) => {\n        if (artist.name.toLowerCase().includes(this.state.filter)) {\n          return true;\n        } else {\n          return false;\n        }\n      })\n      .map((artist, index) => {\n        return (\n          <div\n            key={artist.id}\n            className={styles.artist__card}\n            style={{ \"--animation-order\": index }}\n          >\n            <div\n              className={styles.card__inner}\n              style={{ backgroundImage: `url(${artist.image_url})` }}\n            >\n              <div className={styles.card__content}>\n                <p>\n                  <Link to={`/artist/${artist.id}`}>{artist.name}</Link>\n                </p>\n                <div className={styles.card__icon}>\n                  <a\n                    href={`https://open.spotify.com/artist/${artist.spotify_id}`}\n                    target=\"_blank\"\n                  >\n                    <i className=\"fab fa-spotify\"></i>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      });\n  };\n\n  handleSort = (e) => {\n    this.setState({ order: e.target.value });\n  };\n\n  handleFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  toggleTray = () => {\n    this.setState({ sidetray: !this.state.sidetray });\n  };\n\n  handleGrid = (value) => {\n    this.setState({ gridSize: value });\n  };\n\n  render() {\n    let style = {\n      gridTemplateColumns: `repeat(auto-fill, minmax(${this.state.gridSize}px, 1fr))`,\n    };\n\n    let size = this.state.gridSize < 180 ? \"small\" : \"\";\n\n    return (\n      <div className={styles.artists}>\n        <h2>Artists</h2>\n        <div className={styles.artists__controls}>\n          <div className={styles.control}>\n            <p>Sorted By: </p>\n            <select value={this.state.order} onChange={this.handleSort}>\n              <option value=\"name\">Name</option>\n              <option value=\"created_at\">Date Added</option>\n            </select>\n          </div>\n          <div className={styles.control}>\n            <p>Filter: </p>\n            <input type=\"text\" onChange={this.handleFilter}></input>\n          </div>\n          <div className={styles.control}>\n            <span>\n              <i onClick={this.toggleTray} className=\"fas fa-plus\"></i>\n            </span>\n          </div>\n          <div className={styles.control}>\n            <RangeSlider\n              onRangeChange={this.handleGrid}\n              min={120}\n              max={310}\n              initial={215}\n            />\n          </div>\n        </div>\n        <div\n          className={`${styles.artists__container} ${styles[size]}`}\n          id=\"artists__container\"\n          style={style}\n        >\n          {this.props.artists ? this.artistsList() : \"\"}\n        </div>\n        <Sidetray\n          status={this.state.sidetray}\n          component={NewArtistForm}\n          toggle={this.toggleTray}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  artists: state.artists.artists,\n});\n\nexport default connect(mapStateToProps, {\n  getArtists,\n  deleteArtist,\n  addArtist,\n})(Artists);\n","/Users/nicolas/Projects/musicdb_frontend/src/components/Common/Sitetray/Sidetray.js",["170"],"/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Artists/NewArtistForm/NewArtistForm.js",[],"/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Playlists/Playlists.js",[],"/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Artist/Artist.js",["171","172"],"import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getArtist, deleteArtist } from \"../../../actions/artists\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Moment from \"react-moment\";\n\nimport Sidetray from \"../../Common/Sitetray/Sidetray\";\nimport NewSongForm from \"../Songs/NewSongForm/NewSongForm\";\n\nimport Rating from \"../../Common/Rating/Rating\";\n\nimport styles from \"./Artist.module.scss\";\n\nconst status = {\n  1: \"Not Started\",\n  2: \"In Progress\",\n  3: \"Proficient\",\n};\n\nclass Artist extends Component {\n  static propTypes = {\n    artist: PropTypes.object.isRequired,\n    getArtist: PropTypes.func.isRequired,\n    deleteArtist: PropTypes.func.isRequired,\n  };\n\n  state = {\n    sidetray: false,\n    sideTrayComponent: NewSongForm,\n    sideTrayData: {},\n    alertIndex: null,\n    artistAlert: false,\n    artistDeleted: false,\n  };\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n\n    this.props.getArtist(id);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState({\n        sideTrayComponent: NewSongForm,\n        sideTrayData: {\n          name: this.props.artist.name,\n          id: this.props.artist.id,\n        },\n      });\n    }\n  }\n\n  songList = () => {\n    return this.props.artist.songs.map((song, index) => {\n      return (\n        <div\n          className={`${styles.song__item} ${\n            this.state.alertIndex == index ? styles.alert : \"\"\n          }`}\n          key={song.id}\n          style={{ \"--animation-order\": index }}\n        >\n          <div className={styles.song__inner}>\n            <div className={styles.song__title}>\n              <Link to={`/song/${song.id}/`}>{song.title}</Link>\n              <p>{song.album}</p>\n            </div>\n            <div className={styles.song__instrument}>\n              <p>\n                {song.instrument == \"Guitar\" ? (\n                  <i className=\"fas fa-guitar\"></i>\n                ) : (\n                  <i className={`${styles.icon} ${styles.icon__piano}`}></i>\n                )}\n              </p>\n            </div>\n            <div className={styles.song__genre}>\n              <p>{song.genre}</p>\n            </div>\n            <div className={styles.song__difficulty}>\n              <Rating rating={song.difficulty} editable={false} />\n            </div>\n            <div className={styles.song__status}>\n              <p>{status[song.status]}</p>\n            </div>\n            <div className={styles.song__tools}>\n              {song.spotify_id ? <i className=\"fab fa-spotify\"></i> : \"\"}\n              {song.youtube_id ? <i className=\"fab fa-youtube\"></i> : \"\"}\n            </div>\n          </div>\n          <div className={styles.song__controls}>\n            <i\n              className=\"fas fa-trash\"\n              onClick={() => this.showAlert(index)}\n            ></i>\n          </div>\n          <div className={styles.delete__confirm}>\n            <i className=\"fas fa-check\"></i>\n            <i className=\"fas fa-times\" onClick={this.hideAlert}></i>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  toggleTray = () => {\n    this.setState({\n      sidetray: !this.state.sidetray,\n    });\n  };\n\n  showAlert = (index) => {\n    this.setState({\n      alertIndex: index,\n    });\n  };\n\n  hideAlert = () => {\n    this.setState({\n      alertIndex: null,\n    });\n  };\n\n  toggleArtistAlert = () => {\n    this.setState({ artistAlert: !this.state.artistAlert });\n  };\n\n  handleDelete = (id) => {\n    this.props.deleteArtist(id);\n\n    this.setState({\n      artistDeleted: true,\n    });\n  };\n\n  render() {\n    let artist = this.props.artist;\n\n    if (this.state.artistDeleted) {\n      return <Redirect to=\"/artists\" />;\n    }\n\n    if (artist) {\n      return (\n        <div className={styles.artist}>\n          <span className={styles.background}>{artist.name}</span>\n          <div className={styles.artist__hero}>\n            <div\n              className={styles.artist__image}\n              style={{ backgroundImage: `url(${artist.image_url})` }}\n            >\n              <h2>{artist.name}</h2>\n            </div>\n            <div className={styles.artist__info}>\n              {artist.spotify_id ? (\n                <p>\n                  <a\n                    href={`https://open.spotify.com/artist/${artist.spotify_id}`}\n                    target=\"\n            -blank\"\n                  >\n                    <i className=\"fab fa-spotify\"></i>\n                  </a>\n                </p>\n              ) : (\n                \"\"\n              )}\n              <p>\n                Added <Moment format={\"MM/DD/YYYY\"}>{artist.create_at}</Moment>\n              </p>\n            </div>\n          </div>\n          <div className={styles.list__container}>\n            <div className={styles.list__header}>\n              <h2>Songs</h2>\n              <span>\n                <i\n                  onClick={() =>\n                    this.toggleTray(NewSongForm, {\n                      name: artist.name,\n                      id: artist.id,\n                    })\n                  }\n                  className=\"fas fa-plus\"\n                ></i>\n              </span>\n              <div\n                className={`${styles.right} ${styles.alert__box} ${\n                  this.state.artistAlert ? styles.alert : \"\"\n                }`}\n              >\n                <span onClick={this.toggleArtistAlert}>\n                  <i className={`fas fa-trash`}></i>\n                </span>\n                <p className={styles.alert__text}>\n                  Delete artist?{\" \"}\n                  <i\n                    className={`fas fa-check ${styles.red}`}\n                    onClick={() => this.handleDelete(artist.id)}\n                  ></i>\n                  <i\n                    className=\"fas fa-times\"\n                    onClick={this.toggleArtistAlert}\n                  ></i>\n                </p>\n              </div>\n            </div>\n            <div className={styles.song__list}>\n              {artist.songs && artist.songs.length > 0 ? (\n                <Fragment>{this.songList()}</Fragment>\n              ) : (\n                <p>No songs found for {artist.name}.</p>\n              )}\n            </div>\n          </div>\n          <Sidetray\n            status={this.state.sidetray}\n            component={NewSongForm}\n            data={{ name: artist.name, id: artist.id }}\n            toggle={this.toggleTray}\n          />\n        </div>\n      );\n    } else {\n      return <p>Loading...</p>;\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  artist: state.artists.artist,\n});\n\nexport default connect(mapStateToProps, { getArtist, deleteArtist })(Artist);\n","/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Songs/Songs.js",["173","174"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { getSongs, deleteSong } from \"../../../actions/songs\";\n\nimport Rating from \"../../Common/Rating/Rating\";\n\nimport styles from \"./Songs.module.scss\";\n\nconst status = {\n  1: \"Not Started\",\n  2: \"In Progress\",\n  3: \"Proficient\",\n};\n\nclass Songs extends Component {\n  static propTypes = {\n    songs: PropTypes.array.isRequired,\n    getSongs: PropTypes.func.isRequired,\n    deleteSong: PropTypes.func.isRequired,\n  };\n\n  state = {\n    order: \"title\",\n    filter: \"\",\n    sidetray: false,\n    editingSong: {},\n    alertIndex: null,\n  };\n\n  componentDidMount() {\n    this.props.getSongs();\n  }\n\n  showAlert = (index) => {\n    this.setState({\n      alertIndex: index,\n    });\n  };\n\n  hideAlert = () => {\n    this.setState({\n      alertIndex: null,\n    });\n  };\n\n  handleDelete = (id) => {\n    this.props.deleteSong(id);\n\n    this.setState({\n      alertIndex: null,\n    });\n  };\n\n  songList = () => {\n    return this.props.songs\n      .sort((a, b) => {\n        if (a[this.state.order] < b[this.state.order]) {\n          return -1;\n        }\n        if (a[this.state.order] > b[this.state.order]) {\n          return 1;\n        }\n\n        return 0;\n      })\n      .filter((song) => {\n        if (\n          song.title.toLowerCase().includes(this.state.filter) ||\n          song.artist_name.toLowerCase().includes(this.state.filter)\n        ) {\n          return true;\n        } else {\n          return false;\n        }\n      })\n      .map((song, index) => {\n        return (\n          <div\n            className={`${styles.song__item} ${\n              this.state.alertIndex == index ? styles.alert : \"\"\n            }`}\n            key={song.id}\n            style={{ \"--animation-order\": index }}\n          >\n            <div className={styles.song__inner}>\n              <div className={styles.song__title}>\n                <Link to={`/song/${song.id}/`}>{song.title}</Link>\n                <p>{song.album}</p>\n              </div>\n              <div className={styles.song__artist}>\n                <Link to={`/artist/${song.artist_id}/`}>\n                  {song.artist_name}\n                </Link>\n              </div>\n              <div className={styles.song__instrument}>\n                <p>\n                  {song.instrument == \"Guitar\" ? (\n                    <i className=\"fas fa-guitar\"></i>\n                  ) : (\n                    <i className={`${styles.icon} ${styles.icon__piano}`}></i>\n                  )}\n                </p>\n              </div>\n              <div className={styles.song__genre}>\n                <p>{song.genre}</p>\n              </div>\n              <div className={styles.song__difficulty}>\n                <Rating rating={song.difficulty} editable={false} />\n              </div>\n              <div className={styles.song__status}>\n                <p>{status[song.status]}</p>\n              </div>\n              <div className={styles.song__tools}>\n                {song.spotify_id ? <i className=\"fab fa-spotify\"></i> : \"\"}\n                {song.youtube_id ? <i className=\"fab fa-youtube\"></i> : \"\"}\n              </div>\n            </div>\n            <div className={styles.song__controls}>\n              <i\n                className=\"fas fa-trash\"\n                onClick={() => this.showAlert(index)}\n              ></i>\n            </div>\n            <div className={styles.delete__confirm}>\n              <i\n                className=\"fas fa-check\"\n                onClick={() => this.handleDelete(song.id)}\n              ></i>\n              <i className=\"fas fa-times\" onClick={this.hideAlert}></i>\n            </div>\n          </div>\n        );\n      });\n  };\n\n  handleSort = (e) => {\n    this.setState({ order: e.target.value });\n  };\n\n  handleFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  render() {\n    return (\n      <div className={styles.songs}>\n        <h2>Songs</h2>\n        <div className={styles.songs__controls}>\n          <div className={styles.control}>\n            <p>Sorted By: </p>\n            <select value={this.state.order} onChange={this.handleSort}>\n              <option value=\"title\">Title</option>\n              <option value=\"artist_name\">Artist</option>\n              <option value=\"album\">Album</option>\n              <option value=\"status\">Status</option>\n              <option value=\"created_at\">Date Added</option>\n            </select>\n          </div>\n          <div className={styles.control}>\n            <p>Filter: </p>\n            <input type=\"text\" onChange={this.handleFilter}></input>\n          </div>\n        </div>\n        <div className={styles.song__list}>\n          {this.props.songs ? this.songList() : \"\"}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  songs: state.songs.songs,\n});\n\nexport default connect(mapStateToProps, { getSongs, deleteSong })(Songs);\n","/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Songs/NewSongForm/NewSongForm.js",[],"/Users/nicolas/Projects/musicdb_frontend/src/reducers/songs.js",["175"],"/Users/nicolas/Projects/musicdb_frontend/src/actions/songs.js",[],"/Users/nicolas/Projects/musicdb_frontend/src/components/Common/Rating/Rating.js",[],"/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Song/Song.js",["176","177"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getSong, editSong } from \"../../../actions/songs\";\nimport { Document, Page } from \"react-pdf/dist/esm/entry.webpack\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\n\nimport styles from \"./Song.module.scss\";\nimport \"./Song.scss\";\nimport SpotifyWidget from \"../../Common/SpotifyWidget\";\nimport YoutubeWidget from \"../../Common/YoutubeWidget\";\nimport Rating from \"../../Common/Rating/Rating\";\nimport Sidetray from \"../../Common/Sitetray/Sidetray\";\nimport EditSongForm from \"../Songs/EditSongForm/EditSongForm\";\nimport Loading from \"../../Common/Loading/Loading\";\n\nconst status = {\n  1: \"Not Started\",\n  2: \"In Progress\",\n  3: \"Proficient\",\n};\n\nclass Song extends Component {\n  static propTypes = {\n    song: PropTypes.object,\n    getSong: PropTypes.func.isRequired,\n    editSong: PropTypes.func.isRequired,\n  };\n\n  state = {\n    file: \"\",\n    currentPage: 1,\n    numPages: null,\n    sidetray: false,\n    notes: \"\",\n  };\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n\n    this.props.getSong(id);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState({ notes: this.props.song.notes });\n    }\n  }\n\n  setPage = (index) => {\n    this.setState({ currentPage: (this.state.currentPage += index) });\n  };\n\n  onDocumentLoadSuccess = ({ numPages }) => {\n    this.setState({ numPages: numPages });\n  };\n\n  toggleTray = () => {\n    this.setState({ sidetray: !this.state.sidetray });\n  };\n\n  handleNotes = (e) => {\n    this.setState({ notes: e.target.value });\n  };\n\n  handleNotesSave = (e) => {\n    this.props.editSong(this.props.song.id, { notes: this.state.notes });\n  };\n\n  render() {\n    let song = this.props.song;\n\n    if (song) {\n      return (\n        <div className={styles.song}>\n          <div className={styles.song__info}>\n            <div className={styles.song__title}>\n              <h2>{song.title}</h2>\n              <i className=\"fas fa-pen\" onClick={this.toggleTray}></i>\n            </div>\n            <div className={styles.song__about}>\n              <Link to={`/artist/${song.artist_id}`}>{song.artist_name}</Link>\n              <span>{status[song.status]}</span>\n              <span>\n                {song.instrument === \"Guitar\" ? (\n                  <i className=\"fas fa-guitar\"></i>\n                ) : (\n                  <i className={`${styles.icon} ${styles.icon__piano}`}></i>\n                )}\n              </span>\n              <span>\n                <Rating rating={song.difficulty} editable={false} />\n              </span>\n              <span>{song.genre}</span>\n              <span>\n                <Moment format={\"MM/DD/YYYY\"}>{song.created_at}</Moment>\n              </span>\n            </div>\n          </div>\n\n          <div className={styles.song__content}>\n            <div className={styles.song__left}>\n              {song.youtube_id ? <YoutubeWidget id={song.youtube_id} /> : \"\"}\n              {song.spotify_id ? <SpotifyWidget id={song.spotify_id} /> : \"\"}\n              <h3>Notes</h3>\n              <div className={styles.song__notes}>\n                <textarea\n                  value={this.state.notes}\n                  onChange={this.handleNotes}\n                ></textarea>\n                <button\n                  className={styles.notes__save}\n                  onClick={this.handleNotesSave}\n                >\n                  <i className=\"fas fa-save\"></i>\n                </button>\n              </div>\n            </div>\n            <div className={styles.song__right}>\n              <Document\n                className={styles.pdf__viewer}\n                file={\n                  \"https://musicdbassets.s3.us-east-2.amazonaws.com/assets/tabs/Feathered+Indians+Tab+by+Tyler+Childerstabs.pdf\"\n                }\n                onLoadSuccess={this.onDocumentLoadSuccess}\n              >\n                <Page pageNumber={this.state.currentPage} />\n\n                {this.state.numPages > 1 ? (\n                  <div className={styles.pdf__controls}>\n                    {this.state.currentPage <= 1 ? (\n                      <span>\n                        <i\n                          className={`fas fa-chevron-left ${styles.disabled}`}\n                        ></i>\n                      </span>\n                    ) : (\n                      <span onClick={() => this.setPage(-1)}>\n                        <i className=\"fas fa-chevron-left\"></i>\n                      </span>\n                    )}\n\n                    {this.state.currentPage >= this.state.numPages ? (\n                      <span>\n                        <i\n                          className={`fas fa-chevron-right ${styles.disabled}`}\n                        ></i>\n                      </span>\n                    ) : (\n                      <span onClick={() => this.setPage(1)}>\n                        <i className=\"fas fa-chevron-right\"></i>\n                      </span>\n                    )}\n                  </div>\n                ) : (\n                  \"\"\n                )}\n              </Document>\n            </div>\n          </div>\n          <Sidetray\n            status={this.state.sidetray}\n            component={EditSongForm}\n            toggle={this.toggleTray}\n            data={this.props.song}\n          />\n        </div>\n      );\n    } else {\n      return \"\";\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  song: state.songs.song,\n});\n\nexport default connect(mapStateToProps, { getSong, editSong })(Song);\n","/Users/nicolas/Projects/musicdb_frontend/src/components/Common/YoutubeWidget.js",[],"/Users/nicolas/Projects/musicdb_frontend/src/components/Common/PDFEmbed.js",["178"],"/Users/nicolas/Projects/musicdb_frontend/src/components/Common/SpotifyWidget.js",[],"/Users/nicolas/Projects/musicdb_frontend/src/components/Pages/Songs/EditSongForm/EditSongForm.js",[],"/Users/nicolas/Projects/musicdb_frontend/src/components/Common/Loading/Loading.js",[],"/Users/nicolas/Projects/musicdb_frontend/src/reducers/content.js",["179"],"import { CONTENT_LOADED, CONTENT_LOADING } from \"../actions/types.js\";\n\nconst initialState = {\n  contentLoading: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CONTENT_LOADING:\n      return {\n        ...state,\n        contentLoading: true,\n      };\n    case CONTENT_LOADED:\n      return {\n        ...state,\n        contentLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/nicolas/Projects/musicdb_frontend/src/components/Common/RangeSlider/RangeSlider.js",[],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"180","replacedBy":"184"},{"ruleId":"182","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":29,"column":13,"nodeType":"188","messageId":"189","endLine":29,"endColumn":28},{"ruleId":"180","replacedBy":"190"},{"ruleId":"182","replacedBy":"191"},{"ruleId":"180","replacedBy":"192"},{"ruleId":"182","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":15,"column":1,"nodeType":"196","endLine":55,"endColumn":2},{"ruleId":"180","replacedBy":"197"},{"ruleId":"182","replacedBy":"198"},{"ruleId":"180","replacedBy":"199"},{"ruleId":"182","replacedBy":"200"},{"ruleId":"194","severity":1,"message":"195","line":20,"column":1,"nodeType":"196","endLine":67,"endColumn":2},{"ruleId":"201","severity":1,"message":"202","line":55,"column":5,"nodeType":"203","messageId":"204","endLine":63,"endColumn":9},{"ruleId":"186","severity":1,"message":"205","line":7,"column":3,"nodeType":"188","messageId":"189","endLine":7,"endColumn":7},{"ruleId":"206","severity":1,"message":"207","line":69,"column":21,"nodeType":"208","endLine":69,"endColumn":36},{"ruleId":"209","severity":1,"message":"210","line":21,"column":6,"nodeType":"211","endLine":21,"endColumn":11,"suggestions":"212"},{"ruleId":"213","severity":1,"message":"214","line":60,"column":35,"nodeType":"215","messageId":"216","endLine":60,"endColumn":37},{"ruleId":"213","severity":1,"message":"214","line":72,"column":34,"nodeType":"215","messageId":"216","endLine":72,"endColumn":36},{"ruleId":"213","severity":1,"message":"214","line":82,"column":37,"nodeType":"215","messageId":"216","endLine":82,"endColumn":39},{"ruleId":"213","severity":1,"message":"214","line":99,"column":36,"nodeType":"215","messageId":"216","endLine":99,"endColumn":38},{"ruleId":"194","severity":1,"message":"195","line":13,"column":1,"nodeType":"196","endLine":44,"endColumn":2},{"ruleId":"186","severity":1,"message":"217","line":16,"column":8,"nodeType":"188","messageId":"189","endLine":16,"endColumn":15},{"ruleId":"218","severity":1,"message":"219","line":52,"column":35,"nodeType":"220","endLine":52,"endColumn":45},{"ruleId":"221","severity":1,"message":"222","line":7,"column":9,"nodeType":"223","endLine":14,"endColumn":10},{"ruleId":"194","severity":1,"message":"195","line":7,"column":1,"nodeType":"196","endLine":22,"endColumn":2},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],["224"],["225"],"no-unused-vars","'isAuthenticated' is assigned a value but never used.","Identifier","unusedVar",["224"],["225"],["224"],["225"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["224"],["225"],["224"],["225"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'Cell' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["226"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Loading' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},"Update the dependencies array to be: [callback, ref]",{"range":"229","text":"230"},[604,609],"[callback, ref]"]